{"task_url":"https://www.codechef.com/LRNDSA01/problems/ZCO14003","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Smart Phone</h1>\n<h3>Zonal Computing Olympiad 2014, 30 Nov 2013</h3>\n<br>\n<p> You are developing a smartphone app. You have a list of potential customers for your app. Each customer has a budget and will buy the app at your declared price if and only if the price is less than or equal to the customer's budget.</p>\n<br>\n<p> You want to fix a price so that the revenue you earn from the app is maximized. Find this maximum possible revenue.</p>\n<br>\n<p> For instance, suppose you have 4 potential customers and their budgets are 30, 20, 53 and 14.  In this case, the maximum revenue you can get is 60 .</p>\n<br>\n<h3>Input format</h3>\n<p>Line 1 : <em>N</em>, the total number of potential customers.</p>\n<p>Lines 2 to <em>N</em>+1: Each line has the budget of a potential customer.</p>\n<br>\n<h3>Output format</h3>\n<p> The output consists of a single integer, the maximum possible revenue you can earn from selling your app.</p>\n<br>\n<h3>Sample Input 1</h3>\n<pre>\n4\n30\n20\n53\n14\n</pre>\n<br>\n<h3>Sample Output 1</h3>\n<pre>\n60\n</pre>\n<br>\n<h3>Sample Input 2</h3>\n<pre>\n5\n40\n3\n65\n33\n21\n</pre>\n<br>\n<h3>Sample Output 2</h3>\n<pre>\n99\n</pre>\n<br>\n<h3>Test data</h3>\n<p>Each customers' budget is between 1 and 10<sup>8</sup>, inclusive.</p>\n<br>\n<p><b>Subtask 1 (30 marks)</b> : 1 ≤ <em>N</em> ≤ 5000.</p>\n<p><b>Subtask 2 (70 marks)</b> : 1 ≤ <em>N</em> ≤ 5×10<sup>5</sup>.</p>\n<br>\n<h3>Live evaluation data</h3>\n<p>There are 15 test inputs on the server during the exam. The\ngrouping into subtasks is as follows.</p>\n<p> • <b>Subtask 1:</b> Test inputs 0,…,5</p>\n<p> • <b>Subtask 2:</b> Test inputs 6,…,14</p>\n<p><br><br></p>\n<h3>Note</h3>\n<p>The answer might not fit in a variable of type\n<tt>int</tt>. We recommend that you use variables of type\n<tt>long long</tt> to read the input and compute the\nanswer.  If you use <tt>printf</tt> and <tt>scanf</tt>, you can\nuse <tt>%lld</tt> for <tt>long long</tt>. </p>\n\n\t<body>\n</html>"}}}